#!/bin/bash
IN=$(mktemp)
TMP=$(mktemp)
cat >$IN
cat $IN | while read line; do
	regen_line=$(echo "$line" | tr '\t' '\n')
	echo -e "$regen_line" | while read inner_line; do
		cur=$(echo "$inner_line" | tr -dc '@' | wc -c)
		[ -z "$max_elems" ] && max_elems=0
		if [ $max_elems -lt $cur ]; then
			max_elems=$cur
			echo "$max_elems"
		fi
	done
done | tail -n1 > $TMP

max_elems=$(cat $TMP)

cat $IN |while read line; do
NUM=$(echo "$line" |tr -dc '\t' |wc -c)
if [ -z "$MAX" ]; then
	MAX=0
fi
if [ $NUM -ge $MAX ]; then
	MAX=$NUM
	echo $MAX
fi
done|tail -n1 >$TMP;
MAX=$(cat $TMP);

rm $TMP
echo "$max_elems"
cat $IN | while read line; do
	NUM=$(echo "$line" |tr -dc '\t' |wc -c)
	regen_line=$(echo "$line" | tr '\t' '\n')
	echo -e "$regen_line" | while read inner_line; do
		cur=$(echo "$inner_line" | tr -dc '@' | wc -c)
		regen_inner_line=$(echo "$inner_line" | tr '@' '\n')
		delta=$(( $max_elems - $cur ))
		echo "'$inner_line' delta: $delta" >&2
		[ "$inner_line" == "_" ] && inner_line=""
		out=$(echo -e "$inner_line" | perl -e '@x=reverse(split(" ", <>)); print "@x";')
		eout="$out $(perl -e 'print "0 "x('$max_elems'-'$cur')')"
		[ -z "$out" ] && eout="${eout:1}"
		echo -en "$eout\t"
	done
	for i in `seq $(( $NUM + 1 )) $MAX`; do
		perl -e 'print "999999999 "x('$max_elems'); print "\t";'
	done
	echo
done
rm $IN
